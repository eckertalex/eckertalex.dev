---
import TailwindBreakpoints from "../components/TailwindBreakpoints.astro";
import Header from "../components/Header.astro";
import ThemeHeadScript from "../components/ThemeHeadScript.astro";
import Footer from "../components/Footer.astro";
import SEO from "../components/SEO.astro";
import { siteConfig } from "../content/siteConfig.ts";
import "../styles/global.css";

type Props = {
  title?: string;
  description?: string;
  canonical?: string;
  article?: {
    title: string;
    author: string;
    pubDate: Date;
  };
};

const {
  title: propTitle,
  description = siteConfig.description,
  canonical = new URL(Astro.url.pathname, Astro.site),
  article,
} = Astro.props;

const ogTitle = propTitle ?? siteConfig.name;
const title = propTitle ? `${propTitle} - ${siteConfig.name}` : siteConfig.name;

const ogImage = new URL(siteConfig.ogImage, Astro.url);
const ogImageAlt = siteConfig.ogImageAlt;

const isProd = import.meta.env.MODE === "production";
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <link
      rel="alternate"
      type="application/rss+xml"
      title={siteConfig.name}
      href={new URL("rss.xml", Astro.site)}
    />

    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="oklch(98.4% 0.003 247.858)"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="oklch(12.9% 0.042 264.695)"
    />

    <SEO
      title={title}
      canonical={canonical}
      description={description}
      author={article?.author ?? siteConfig.author}
      openGraph={{
        basic: {
          type: "website",
          url: Astro.url,
          title: article?.title ?? ogTitle,
          image: ogImage.toString(),
          description,
          locale: "en-US",
          siteName: siteConfig.name,
        },
        image: {
          url: ogImage.toString(),
          alt: ogImageAlt,
        },
        ...(article
          ? {
              article: {
                publishedTime: article.pubDate.toISOString(),
                author: article.author,
              },
            }
          : {}),
      }}
      twitter={{
        card: "summary_large_image",
        site: "@eckertalex_",
        title: article?.title ?? ogTitle,
        description,
        image: ogImage,
        imageAlt: ogImageAlt,
      }}
    />

    <ThemeHeadScript />

    {
      isProd ? (
        <script
          defer
          is:inline
          src="https://cloud.umami.is/script.js"
          data-website-id={siteConfig.umamiId}
        />
      ) : null
    }
  </head>
  <body
    class="bg-slate-50 dark:bg-slate-950 pl-[calc(100vw-100%)] text-slate-950 dark:text-slate-50 antialiased"
  >
    <div
      class="flex flex-col mx-auto max-w-2xl min-h-screen px-4 sm:px-6 xl:px-0"
    >
      <Header />
      <main id="skip" class="mb-auto mt-8">
        <slot />
      </main>
      <Footer />
    </div>
    <TailwindBreakpoints />
  </body>
</html>
